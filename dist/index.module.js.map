{"version":3,"file":"index.module.js","sources":["../src/authReducer.ts","../src/useAuth.ts","../src/AuthProvider.tsx"],"sourcesContent":["import { AuthState, AuthAction } from \"./types\";\n\nexport const authReducer = (\n    state: AuthState,\n    action: AuthAction\n): AuthState => {\n    switch (action.type) {\n        case \"login\":\n            const { authResult, user } = action;\n            const expiresAt =\n                authResult.expiresIn! * 1000 + new Date().getTime();\n\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(\n                    \"useAuth:expires_at\",\n                    JSON.stringify(expiresAt)\n                );\n                localStorage.setItem(\"useAuth:user\", JSON.stringify(user));\n            }\n\n            return {\n                ...state,\n                user,\n                expiresAt,\n                authResult\n            };\n        case \"logout\":\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.removeItem(\"useAuth:expires_at\");\n                localStorage.removeItem(\"useAuth:user\");\n            }\n\n            return {\n                ...state,\n                user: {},\n                expiresAt: null,\n                authResult: null\n            };\n        case \"stopAuthenticating\":\n            return {\n                ...state,\n                isAuthenticating: false\n            };\n        case \"startAuthenticating\":\n            return {\n                ...state,\n                isAuthenticating: true\n            };\n        case \"error\":\n            const { errorType, error } = action;\n            return {\n                ...state,\n                user: {},\n                expiresAt: null,\n                authResult: null,\n                errorType,\n                error\n            };\n        default:\n            return state;\n    }\n};\n","import { useContext } from \"react\";\n\nimport { AuthContext } from \"./AuthProvider\";\nimport {\n    useAuthInterface,\n    handleAuthResultInterface,\n    setSessionInterface\n} from \"./types\";\nimport {\n    Auth0DecodedHash,\n    Auth0UserProfile,\n    Auth0Error,\n    Auth0ParseHashError\n} from \"auth0-js\";\n\nconst setSession: setSessionInterface = async ({\n    dispatch,\n    auth0,\n    authResult\n}) => {\n    return new Promise((resolve, reject) => {\n        auth0.client.userInfo(\n            authResult.accessToken || \"\",\n            (err: Auth0Error | null, user: Auth0UserProfile) => {\n                if (err) {\n                    dispatch({\n                        type: \"error\",\n                        errorType: \"userInfo\",\n                        error: err\n                    });\n                    reject(err);\n                } else {\n                    dispatch({\n                        type: \"login\",\n                        authResult,\n                        user\n                    });\n                    resolve(user);\n                }\n            }\n        );\n    });\n};\n\nexport const handleAuthResult: handleAuthResultInterface = async ({\n    err,\n    dispatch,\n    auth0,\n    authResult\n}) => {\n    dispatch({\n        type: \"stopAuthenticating\"\n    });\n\n    if (authResult && authResult.accessToken && authResult.idToken) {\n        try {\n            await setSession({ dispatch, auth0, authResult });\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    } else if (err) {\n        console.error(err);\n        dispatch({\n            type: \"error\",\n            error: err,\n            errorType: \"authResult\"\n        });\n\n        return false;\n    } else {\n        return false;\n    }\n};\n\n/**\n * The main API for useAuth\n *\n * @return {boolean} isAuthenticated is current user authenticated\n * @return {boolean} isAuthenticating currently running authentication\n * @return {function} isAuthorized check if current user is authenticated and matches list of roles\n * @return {object} user current user\n * @return {string} userId current user's identifier\n * @return {object} authResult raw authentication result object from auth provider\n * @return {function} login start the login process\n * @return {function} signup same as login, passes { mode: \"signUp\", screen_hint: \"signup\" } to Auth0\n * @return {function} logout start the logout process\n * @return {function} handleAuthentication function to call on your callback page\n */\nexport const useAuth: useAuthInterface = () => {\n    const {\n        state,\n        dispatch,\n        auth0,\n        callback_domain,\n        navigate,\n        customPropertyNamespace\n    } = useContext(AuthContext);\n\n    const login = () => {\n        auth0 && auth0.authorize();\n    };\n\n    const signup = () => {\n        auth0 && auth0.authorize({ mode: \"signUp\", screen_hint: \"signup\" });\n    };\n\n    const logout = () => {\n        auth0 &&\n            auth0.logout({\n                returnTo: callback_domain\n            });\n        dispatch({\n            type: \"logout\"\n        });\n\n        // Return to the homepage after logout.\n        navigate(\"/\");\n    };\n\n    const handleAuthentication = ({ postLoginRoute = \"/\" } = {}) => {\n        if (typeof window !== \"undefined\") {\n            dispatch({\n                type: \"startAuthenticating\"\n            });\n\n            auth0 &&\n                auth0.parseHash(\n                    async (\n                        err: Auth0ParseHashError | null,\n                        authResult: Auth0DecodedHash | null\n                    ) => {\n                        await handleAuthResult({\n                            err,\n                            authResult,\n                            dispatch,\n                            auth0\n                        });\n\n                        navigate(postLoginRoute);\n                    }\n                );\n        }\n    };\n\n    const isAuthenticated = () => {\n        return !!(state.expiresAt && new Date().getTime() < state.expiresAt);\n    };\n\n    const isAuthorized = (roles: string | string[]) => {\n        const _roles = Array.isArray(roles) ? roles : [roles];\n        const metadata =\n            state.user[\n                // make this friendlier to use if you leave a trailing slash in config\n                `${customPropertyNamespace}/user_metadata`.replace(\n                    /\\/+user_metadata/,\n                    \"/user_metadata\"\n                )\n            ];\n\n        if (!isAuthenticated() || !metadata) {\n            return false;\n        } else {\n            return _roles.some(role => metadata.roles.includes(role));\n        }\n    };\n\n    return {\n        isAuthenticating: state.isAuthenticating,\n        isAuthenticated,\n        isAuthorized,\n        user: state.user,\n        userId: state.user ? state.user.sub : null,\n        authResult: state.authResult,\n        login,\n        signup,\n        logout,\n        handleAuthentication\n    };\n};\n","import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport Auth0 from \"auth0-js\";\nimport { AuthOptions } from \"auth0-js\";\n\nimport { authReducer } from \"./authReducer\";\nimport { handleAuthResult } from \"./useAuth\";\nimport {\n    AuthProviderInterface,\n    AuthState,\n    AuthAction,\n    AuthContextState\n} from \"./types\";\n\nfunction getDefaultState(): AuthState {\n    const DEFAULT_STATE = {\n        user: {},\n        expiresAt: null,\n        isAuthenticating: false\n    };\n\n    let stored_state = {};\n\n    if (typeof localStorage !== \"undefined\") {\n        const expiresAt = new Date(\n            JSON.parse(localStorage.getItem(\"useAuth:expires_at\") || \"0\")\n        );\n\n        if (expiresAt > new Date()) {\n            stored_state = {\n                user: JSON.parse(localStorage.getItem(\"useAuth:user\") || \"{}\"),\n                expiresAt: expiresAt\n            };\n        }\n    }\n\n    return {\n        ...DEFAULT_STATE,\n        ...stored_state\n    };\n}\n\nexport const AuthContext = createContext<AuthContextState>({\n    state: getDefaultState(),\n    dispatch: () => {},\n    auth0: null,\n    callback_domain: \"http://localhost:8000\",\n    customPropertyNamespace: \"http://localhost:8000\",\n    navigate: (path: string) => {}\n});\n\nexport const AuthProvider: AuthProviderInterface = ({\n    children,\n    navigate,\n    auth0_audience_domain,\n    auth0_domain,\n    auth0_client_id,\n    auth0_params,\n    customPropertyNamespace\n}) => {\n    const callbackDomain =\n        typeof window !== \"undefined\"\n            ? `${window.location.protocol}//${window.location.host}`\n            : \"http://localhost:8000\";\n\n    const audienceDomain = auth0_audience_domain || auth0_domain;\n\n    const params: AuthOptions = {\n        domain: auth0_domain,\n        clientID: auth0_client_id,\n        redirectUri: `${callbackDomain}/auth0_callback`,\n        audience: `https://${audienceDomain}/api/v2/`,\n        responseType: \"token id_token\",\n        scope: \"openid profile email\"\n    };\n\n    // Instantiate Auth0 client\n    const auth0 = new Auth0.WebAuth({ ...params, ...auth0_params });\n\n    // Holds authentication state\n    const [state, dispatch] = useReducer<React.Reducer<AuthState, AuthAction>>(\n        authReducer,\n        getDefaultState()\n    );\n\n    const [contextValue, setContextValue] = useState<AuthContextState>({\n        state,\n        dispatch,\n        auth0,\n        callback_domain: callbackDomain,\n        customPropertyNamespace,\n        navigate\n    });\n\n    // Update context value and trigger re-render\n    // This patterns avoids unnecessary deep renders\n    // https://reactjs.org/docs/context.html#caveats\n    useEffect(() => {\n        setContextValue((contextValue: AuthContextState) => ({\n            ...contextValue,\n            state\n        }));\n    }, [state]);\n\n    // Verify user is logged-in on AuthProvider mount\n    // Avoids storing sensitive data in local storage\n    useEffect(() => {\n        dispatch({\n            type: \"startAuthenticating\"\n        });\n        console.log('check session')\n        auth0.checkSession({}, (err, authResult) => {\n            console.log('check session err', err)\n            dispatch({\n                type: \"stopAuthenticating\"\n            });\n\n            console.log(err);\n            if (err) {\n                dispatch({\n                    type: \"error\",\n                    errorType: \"checkSession\",\n                    error: err\n                });\n            } else {\n                handleAuthResult({ dispatch, auth0, authResult });\n            }\n        });\n    }, []);\n\n    return (\n        <AuthContext.Provider value={contextValue}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"names":["authReducer","state","action","type","authResult","user","expiresAt","expiresIn","Date","getTime","localStorage","setItem","JSON","stringify","removeItem","isAuthenticating","errorType","error","handleAuthResult","err","dispatch","auth0","accessToken","idToken","Promise","resolve","reject","client","userInfo","setSession","console","useAuth","useContext","AuthContext","callback_domain","navigate","customPropertyNamespace","isAuthenticated","isAuthorized","roles","_roles","Array","isArray","metadata","replace","some","role","includes","userId","sub","login","authorize","signup","mode","screen_hint","logout","returnTo","handleAuthentication","postLoginRoute","window","parseHash","getDefaultState","stored_state","parse","getItem","createContext","path","AuthProvider","children","auth0_domain","callbackDomain","location","protocol","host","Auth0","WebAuth","domain","clientID","auth0_client_id","redirectUri","audience","auth0_audience_domain","responseType","scope","auth0_params","useReducer","useState","contextValue","setContextValue","useEffect","log","checkSession","React","Provider","value"],"mappings":"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"}